name: Check Pull Request

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      run-quick-tests:
        description: "Run quick tests | ignores other options for testing (they still apply for compile/build)"
        type: boolean
        required: false
        default: "false"
      run-basic-tests:
        description: "Run basic tests | Compile and builds all the basic examples - Runs basic tests"
        type: boolean
        required: false
        default: "true"
      run-internet-tests:
        description: "Run internet tests | Compile and builds all the internet examples - Runs internet tests"
        type: boolean
        required: false
        default: "true"
      run-blockchain-tests:
        description: "Run blockchain tests | Compile and builds all the blockchain examples - Runs blockchain tests"
        type: boolean
        required: false
        default: "false"
      run-scion-tests:
        description: "Run SCION tests | Compile and builds all the SCION examples - Runs SCION tests"
        type: boolean
        required: false
        default: "false"


jobs:
  compile-examples:
    name: Compile Examples
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      SCION_TESTS: ${{ github.event.inputs.run-scion-tests || 'false' }}
      BASIC_TESTS: ${{ github.event.inputs.run-basic-tests || 'true' }}
      INTERNET_TESTS: ${{ github.event.inputs.run-internet-tests || 'true' }}
      BLOCKCHAIN_TESTS: ${{ github.event.inputs.run-blockchain-tests || 'false' }}
      QUICK_TESTS: ${{ github.event.inputs.run-quick-tests || 'true' }}
    steps:
      - name: Check out the source repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'
          cache-dependency-path: "**/*requirements.txt"
      - run: pip install -r requirements.txt -r dev-requirements.txt -r tests/requirements.txt
      - name: Get scion-pki
        if: ${{ env.SCION_TESTS == 'true' }}
        run: |
          curl -fsSL -O https://github.com/scionproto/scion/releases/download/v0.12.0/scion_0.12.0_amd64_linux.tar.gz
          mkdir bin
          tar -C bin -xzf scion_0.12.0_amd64_linux.tar.gz scion-pki
      - name: Compile Examples
        run: |
          source development.env
          export PATH=$PATH:$PWD/bin
          CMD="tests/compile-and-build-test/compile-test.py"
          if [ "$BASIC_TESTS" == "true" ]; then
            CMD+=" --basic"
          fi
          if [ "$INTERNET_TESTS" == "true" ]; then
            CMD+=" --internet"
          fi
          if [ "$BLOCKCHAIN_TESTS" == "true" ]; then
            CMD+=" --blockchain"
          fi
          if [ "$SCION_TESTS" == "true" ]; then
            CMD+=" --scion"
          fi
          python $CMD

  run-tests:
    name: Run Tests
    needs: compile-examples # Only run heavy tests if quick compile test succeeds
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      SCION_TESTS: ${{ github.event.inputs.run-scion-tests || 'false' }}
      BASIC_TESTS: ${{ github.event.inputs.run-basic-tests || 'true' }}
      INTERNET_TESTS: ${{ github.event.inputs.run-internet-tests || 'true' }}
      BLOCKCHAIN_TESTS: ${{ github.event.inputs.run-blockchain-tests || 'false' }}
      QUICK_TESTS: ${{ github.event.inputs.run-quick-tests || 'true' }}
    steps:
      - name: Check out the source repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'
          cache-dependency-path: "**/*requirements.txt"
      - run: pip install -r requirements.txt -r dev-requirements.txt -r tests/requirements.txt
      - name: Get scion-pki
        if: ${{ env.SCION_TESTS == 'true' }}
        run: |
          curl -fsSL -O https://github.com/scionproto/scion/releases/download/v0.12.0/scion_0.12.0_amd64_linux.tar.gz
          mkdir bin
          tar -C bin -xzf scion_0.12.0_amd64_linux.tar.gz scion-pki
      - name: Run tests
        run: |
          source development.env
          export PATH=$PATH:$PWD/bin
          CMD="tests/run-tests.py"
          if [ "$QUICK_TESTS" == "true" ]; then
            CMD+=" --ci"
          fi
          if [ "$BASIC_TESTS" == "true" ]; then
            CMD+=" --basic"
          fi
          if [ "$INTERNET_TESTS" == "true" ]; then
            CMD+=" --internet"
          fi
          if [ "$BLOCKCHAIN_TESTS" == "true" ]; then
            CMD+=" --blockchain"
          fi
          if [ "$SCION_TESTS" == "true" ]; then
            CMD+=" --scion"
          fi
          python $CMD
      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: test_result
          path: |
            tests/test_result.txt
            tests/**/test_log
      - name: Check for errors
        shell: bash
        run: set +e; grep -E "^score" tests/test_result.txt | grep -Eq '[1-9][0-9]* errors|[1-9][0-9]* failures'; test $? -eq 1

  build-examples:
    name: Build Examples
    needs: compile-examples # Only run heavy tests if quick compile test succeeds
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      SCION_TESTS: ${{ github.event.inputs.run-scion-tests || 'true' }}
      BASIC_TESTS: ${{ github.event.inputs.run-basic-tests || 'true' }}
      INTERNET_TESTS: ${{ github.event.inputs.run-internet-tests || 'true' }}
      BLOCKCHAIN_TESTS: ${{ github.event.inputs.run-blockchain-tests || 'false' }}
      QUICK_TESTS: ${{ github.event.inputs.run-quick-tests || 'true' }}
    steps:
      - name: Check out the source repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'
          cache-dependency-path: "**/*requirements.txt"
      - run: pip install -r requirements.txt -r dev-requirements.txt -r tests/requirements.txt
      - name: Get scion-pki
        if: ${{ github.event.inputs.run-scion-tests == 'true' }}
        run: |
          curl -fsSL -O https://github.com/scionproto/scion/releases/download/v0.12.0/scion_0.12.0_amd64_linux.tar.gz
          mkdir bin
          tar -C bin -xzf scion_0.12.0_amd64_linux.tar.gz scion-pki
      - name: Build Examples
        run: |
          source development.env
          export PATH=$PATH:$PWD/bin
          cd tests/compile-and-build-test
          CMD="compile-and-build-test.py"
          if [ "$BASIC_TESTS" == "true" ]; then
            CMD+=" --basic"
          fi
          if [ "$INTERNET_TESTS" == "true" ]; then
            CMD+=" --internet"
          fi
          if [ "$BLOCKCHAIN_TESTS" == "true" ]; then
            CMD+=" --blockchain"
          fi
          if [ "$SCION_TESTS" == "true" ]; then
            CMD+=" --scion"
          fi
          python $CMD
      - name: Archive test results
        uses: actions/upload-artifact@v4
        with:
          name: test_log
          path: |
            tests/compile-and-build-test/test_log/build_log.txt
            tests/compile-and-build-test/test_log/log.txt
      - name: Check for errors
        shell: bash
        run: set +e; grep -E "^score" tests/compile-and-build-test/test_log/log.txt | grep -Eq '[1-9][0-9]* errors|[1-9][0-9]* failures'; test $? -eq 1
